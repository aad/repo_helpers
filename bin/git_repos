#!/usr/bin/env bash

: ${FOLDER:="$(pwd)"}
: ${EXCLUDE:=""}
: ${INCLUDE:=""}

command="$1"; shift
: ${command:="list"}

git_folders="$(find ${FOLDER} -maxdepth 2 -type d -path "*/.git")"

function filter_folders_with_changes() {
  parallel "git --git-dir={} --work-tree={//} status -sb \
  | sed -e '/^## [^ ]*\$/d' \
  | grep -v '^\$' >/dev/null && echo '{}' \
  "
}
export -f filter_folders_with_changes

case $command in 
  pull)
    echo "$git_folders" \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel -u -j 400% "\
echo pull \$(basename {//});\
git --git-dir={} --work-tree={//} pull -q \
"
    ;;
  filter)
    echo "$git_folders" \
      | parallel "git --git-dir={} --work-tree={//} config --get remote.origin.url" \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | grep "$@"
    ;;
  list)
    echo "$git_folders" \
      | filter_folders_with_changes \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel "\
echo \$(basename {//}); \
unbuffer git --git-dir={} --work-tree={//} status -sb \
| sed -e 's/^/    /g' \
"
    ;;
  push)
    commit_message="${@:-"foo bar"}"
    echo "$git_folders" \
      | filter_folders_with_changes \
      | if [[ -n "$EXCLUDE" ]]; then grep -v -E "$EXCLUDE"; else cat; fi \
      | if [[ -n "$INCLUDE" ]]; then grep -E "$INCLUDE"; else cat; fi \
      | parallel "\
echo push \$(basename {//});\
git --git-dir={} --work-tree={//} add --all;\
git --git-dir={} --work-tree={//} commit -m '${commit_message}' -q;\
git --git-dir={} --work-tree={//} pull -q;\
git --git-dir={} --work-tree={//} push -q;\
"
    ;;
  *)
    echo "command: $command unknown"
    ;;
esac

